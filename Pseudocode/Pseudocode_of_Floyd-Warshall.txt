// Pseudocode: Floyd-Warshall

Input -> A weighted graph as an adjacency matrix
Output -> All pair shortest distance

time complexity ->  O(v^2) + O(v^3) => O(v^3)
space complexity -> O(v^2)

- create a distance_matrix "d" where d[i][j] = x where there is a direct -> O(v^2) 
  edge from node "i" to node "j" and cost is "x" 
- for all node "i" d[i][j] = 0
- for all nodes "i" & "j" where there isn't any direct edge from "i" & "j"
	d[i][j] = INF

- for all node "k" -> O(v)
	- for all node "v" -> O(v)
		- for all node "u" -> O(v)
			d[u][v] = min(d[u][v], d[u][k] + d[k][v])

- output all pair shortest distance "d"